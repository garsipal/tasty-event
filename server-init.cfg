// basic server configuration script
// note that some commands are commented out with //, and need to be uncommented and set to a value to work

// optional specific IP for server to use
serverip "193.70.114.252"

// optional specific port for server to use
// serverport 28785

// maximum number of allowed clients
maxclients 64

// maximum number of bots a master can add - admins are unaffected by this limit
// set to 0 to disallow bots
serverbotlimit 0

// controls whether or not the server is intended for "public" use
// when set to 0, allows "setmaster 1" and locked/private mastermodes (for coop-editing and such)
// when set to 1, can only gain master by "auth" or admin, and doesn't allow locked/private mastermodes
// when set to 2, allows "setmaster 1" but disallows private mastermode (for public coop-editing)
publicserver 0

// description server shows for the server browser
serverdesc "-> |tasty-EVENT| <-"

// password required to connect to the server
// generally unnecessary unless you really don't want anyone connecting to your server
// using the serverauth option allows people with an appropriate local authkey to connect regardless
// serverpass "abc"

// password that allows you to gain admin by "setmaster password_here"
// local authkeys are more secure than this and should be used instead if possible
// adminpass "abc"

// domain to use for local authkeys to the server so people can authenticate by "auth domain_here"
// must be a non-empty string that should be unique to your server to prevent clashes with other servers
// serverauth ""

// controls whether or not the server reports to the masterserver
updatemaster 1

// optional message of the day to send to players on connect
// servermotd "..."

// controls whether admin privs are necessary to record a demo
// when 1 requires admin (default)
// when 0 only requires master
// restrictdemos 1

modifiedmapspectator 1

// maximum number of demos the server will store
// maxdemos 5

// maximum size a demo is allowed to grow to in megabytes
// maxdemosize 16

// whether or not to enable server-side demo recording automatically for every match
// when 1 will always record a server-side demo for every match
// when 0 will only record a demo for a match when requested (default)
// autorecorddemo 0

// controls whether admin privs are necessary to pause a game
// when 1 requires admin (default)
// when 0 only requires master
restrictpausegame 0

// controls whether admin privs are necessary to change gamespeed
// when 1 requires admin (default)
// when 0 only requires master
// restrictgamespeed 1

// whether or not to allow players to vote on maps not in the rotation
// when 1 requires master
// when 2 requires admin
// when 0 allows any votes (default)
lockmaprotation 2

// whether or not teams should persist across matches and avoid autobalancing
// when 1 teams persist across matches and don't autobalance
// when 0 teams automatically balance at the beginning of a match (default)
// persistteams 0

// whether or not overtime is enabled for matches
// when 1 enables overtime such that the match will keep going so long as scores are tied
// when 0 the match will always end after a fixed time whether or not anyone wins (default)
overtime 0

// whether or not blue armour is enabled in regen capture
// when 1 players spawn with blue armour in regen capture as in other modes (default)
// when 0 players spawn without any armour in regen capture
// regenbluearmour 1

ffamaps =     [ ruebli venice xenon hallo suburb kopenhagen ]
capturemaps = [ ruebli venice xenon hallo suburb kopenhagen ]
ctfmaps =     [ ruebli venice xenon hallo suburb kopenhagen ]
spmaprot =    [ ruebli venice xenon hallo suburb kopenhagen ]

maprotationreset
maprotation "*" $ffamaps
maprotation "?capture ?hold" $capturemaps
maprotation "?ctf ?protect ?collect" $ctfmaps
maprotation "SP" $spmaprot
maprotation "DMSP" $ffamaps

teamkillkickreset
teamkillkick "*" 7 30
teamkillkick "?capture" 10 30

// automatically execute all .cfg files in a directory
loopfiles f "server" cfg [ exec (concatword "server/" $f ".cfg") ]
